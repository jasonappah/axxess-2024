version: "3.8"

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - user_api_network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: dev_api_admin
      POSTGRES_PASSWORD: dev_api_admin
      POSTGRES_DB: gia_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - user_api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_api_admin -d gia_dev -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:7.0
    ports:
      - "3567:3567"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - user_api_network
    environment:
      POSTGRESQL_USER: "dev_api_admin"
      POSTGRESQL_PASSWORD: "dev_api_admin"
      POSTGRESQL_DATABASE_NAME: "gia_dev"
      POSTGRESQL_HOST: "postgres"
      POSTGRESQL_PORT: "5432"
      POSTGRESQL_TABLE_NAMES_PREFIX: "supertokens_"

  user_api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user_api_network
  
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    depends_on:
      postgres:
        condition: service_healthy
      user_api:
        condition: service_healthy
    networks:
      - user_api_network

networks:
  user_api_network:
    driver: bridge

volumes:
  postgres_data:
